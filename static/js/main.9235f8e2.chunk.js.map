{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","map","good","index","id","name","App","useState","isStarted","setStart","isReversed","setReversed","sortBy","SortBy","renderedGoods","sort","good1","good2","localeCompare","length","reverse","className","type","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"iOAQMA,EAA0B,CAC9B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UACAC,KAAI,SAACC,EAAMC,GAAP,MAA0B,CAC9BC,GAAID,EAAQ,EACZE,KAAMH,MAsFOI,EAnFO,WACpB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAyBJ,mBAAS,IAAlC,mBAAOK,EAAP,KAAeC,EAAf,KAWMC,EAAa,YAAOd,GAiB1B,OAfAc,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,IAAK,OACH,OAAOI,EAAMX,KAAKa,cAAcD,EAAMZ,MACxC,IAAK,SACH,OAAOW,EAAMX,KAAKc,OAASF,EAAMZ,KAAKc,OACxC,QACE,OAAO,MAITT,GACFI,EAAcM,UAId,sBAAKC,UAAU,MAAf,UACE,uCAECb,EAEG,6BACGM,EAAcb,KAAI,SAAAC,GAAI,OACrB,6BAAmBA,EAAKG,MAAfH,EAAKE,SAKlB,wBACEkB,KAAK,SACLC,QAzCI,kBAAMd,GAAS,IAuCrB,mBAQJ,wBACEa,KAAK,SACLC,QAhDU,kBAAMZ,GAAY,SAAAa,GAAO,OAAKA,MA8C1C,qBAOA,wBACEF,KAAK,SACLC,QAtDa,kBAAMV,EAAO,SAoD5B,iCAOA,wBACES,KAAK,SACLC,QA5De,kBAAMV,EAAO,WA0D9B,4BAOA,wBACES,KAAK,SACLC,QAlEQ,WACZZ,GAAY,GACZE,EAAO,KA8DL,uBC9FNY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9235f8e2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\ninterface Good {\n  id: number,\n  name: string,\n}\n\nconst goodsFromServer: Good[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n].map((good, index: number) => ({\n  id: index + 1,\n  name: good,\n}));\n\nconst App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortBy, SortBy] = useState('');\n\n  const start = () => setStart(true);\n  const reverse = () => setReversed(current => !current);\n  const sortByName = () => SortBy('name');\n  const sortByLength = () => SortBy('length');\n  const reset = () => {\n    setReversed(false);\n    SortBy('');\n  };\n\n  const renderedGoods = [...goodsFromServer];\n\n  renderedGoods.sort((good1, good2) => {\n    switch (sortBy) {\n      case 'name':\n        return good1.name.localeCompare(good2.name);\n      case 'length':\n        return good1.name.length - good2.name.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    renderedGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n\n      {isStarted\n        ? (\n          <ul>\n            {renderedGoods.map(good => (\n              <li key={good.id}>{good.name}</li>\n            ))}\n          </ul>\n        )\n        : (\n          <button\n            type=\"button\"\n            onClick={start}\n          >\n            Start\n          </button>\n        )}\n\n      <button\n        type=\"button\"\n        onClick={reverse}\n      >\n        Reverse\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={sortByName}\n      >\n        Sort Alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={sortByLength}\n      >\n        Sort by length\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={reset}\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}